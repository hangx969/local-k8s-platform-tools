controller:
  name: controller
  enableAnnotationValidations: false
  config:
    proxy-buffer-size: "16k"
    enable-modsecurity: "false"
    enable-owasp-modsecurity-crs: "false"
    modsecurity-snippet: |
      # Enable prevention mode. Can be any of: DetectionOnly,On,Off (default is DetectionOnly)
      SecRuleEngine DetectionOnly
      # Enable scanning of the request body
      SecRequestBodyAccess On
      # Max request sizes in bytes (with/without files)
      # Note NGINX Ingress has its own annotations, keep in sync!
      SecRequestBodyLimit 20971520 # 20Mb (default is 12.5Mb)
      SecRequestBodyNoFilesLimit 262144 # 250Kb (default is 128Kb)
      SecRequestBodyLimitAction Reject # Reject if larger (we could also let it pass with ProcessPartial)
      # Update config to include PUT/PATCH/DELETE in the allowed HTTP methods (instead of fully disabling 911100)
      SecAction "id:900200,phase:1,nolog,pass,t:none,\
        setvar:tx.allowed_methods=GET HEAD POST OPTIONS PUT PATCH DELETE"
      # Send ModSecurity audit logs to the stdout (only for rejected requests)
      SecAuditLog /dev/stdout
      SecAuditLogFormat JSON
      SecAuditEngine RelevantOnly # could be On/Off/RelevantOnly
      # Enable XML and JSON parsing
      SecRule REQUEST_HEADERS:Content-Type "(?:application(?:/soap\+|/)|text/)xml" \
          "id:200000,phase:1,t:none,t:lowercase,pass,nolog,\
          ctl:requestBodyProcessor=XML"
      SecRule REQUEST_HEADERS:Content-Type "application/json" \
          "id:200001,phase:1,t:none,t:lowercase,pass,nolog,\
          ctl:requestBodyProcessor=JSON"
      # Rule syntax https://malware.expert/tutorial/writing-modsecurity-rules/
      # Important that the new ids created (1000x) are new
      # Remove rule that checks for connecting to raw ip, very spammy and not useful
      SecRuleRemoveById 920350
      # Remove php injection attack against prometheus endpoint, not php and not an attack
      SecRule REQUEST_URI "@beginsWith /api/ds/query" \
          "id:10000,phase:1,pass,nolog,ctl:ruleRemoveById=933210"
      # Remove php injection attack against prometheus endpoint, not php and not an attack
      SecRule REQUEST_URI "@beginsWith /api/ds/query" \
          "id:10001,phase:1,pass,nolog,ctl:ruleRemoveById=949110"

  watchIngressWithoutClass: true
  ingressClassByName: true
  hostNetwork: true
  hostPort:
    enabled: true
    ports:
      http: 80
      https: 443
  ingressClassResource:
    name: nginx-default
    # -- Create the IngressClass or not
    enabled: true
    # -- If true, Ingresses without `ingressClassName` get assigned to this IngressClass on creation.
    # Ingress creation gets rejected if there are multiple default IngressClasses.
    # Ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#default-ingress-class
    default: true
  ingressClass: nginx-default

  tolerations:
    - key: "node-role.kubernetes.io/control-plane"
      operator: "Equal"
      effect: "NoSchedule"

  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 1
    targetCPUUtilizationPercentage: 50
    targetMemoryUtilizationPercentage: 70

  service:
    type: NodePort

  metrics:
    enabled: true
    service:
      enabled: true
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "10254"
    serviceMonitor:
      enabled: true

