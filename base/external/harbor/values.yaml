expose:
  type: ingress

  tls:
    enabled: true
    certSource: secret
    secret:
      secretName: "harbor-tls-cert-secret"

  ingress:
    hosts:
      core: harbor.hanxux.local
    controller: default
    className: "nginx-default"

  nodePort:
    # The name of NodePort service
    name: harbor
    ports:
      http:
        # The service port Harbor listens on when serving HTTP
        port: 80
        # The node port Harbor listens on when serving HTTP
        nodePort: 32002
      https:
        # The service port Harbor listens on when serving HTTPS
        port: 443
        # The node port Harbor listens on when serving HTTPS
        nodePort: 32003

externalURL: "https://harbor.hanxux.local"

persistence:
  enabled: true
  # Setting it to "keep" to avoid removing PVCs during a helm delete
  # operation. Leaving it empty will delete PVCs after the chart deleted
  # (this does not apply for PVCs that are created for internal database
  # and redis components, i.e. they are never deleted automatically)
  resourcePolicy: "keep"
  persistentVolumeClaim:

    registry:
      storageClass: "sc-nfs"
      accessMode: ReadWriteMany
      size: 1.5Gi

    jobservice:
      jobLog:
        storageClass: "sc-nfs"
        accessMode: ReadWriteMany
        size: 1Gi

    # If external database is used, the following settings for database will be ignored
    database:
      storageClass: "sc-nfs"
      accessMode: ReadWriteMany
      size: 1Gi

    # If external Redis is used, the following settings for Redis will be ignored
    redis:
      storageClass: "sc-nfs"
      accessMode: ReadWriteMany
      size: 1Gi
      annotations: {}

metrics:
  enabled: true
  serviceMonitor:
    enabled: true

trace:
  enabled: false
  # trace provider: jaeger or otel
  # jaeger should be 1.26+
  provider: jaeger
  # set sample_rate to 1 if you wanna sampling 100% of trace data; set 0.5 if you wanna sampling 50% of trace data, and so forth
  sample_rate: 1
  # namespace used to differentiate different harbor services
  # namespace:
  # attributes is a key value dict contains user defined attributes used to initialize trace provider
  # attributes:
  #   application: harbor
  jaeger:
    # jaeger supports two modes:
    #   collector mode(uncomment endpoint and uncomment username, password if needed)
    #   agent mode(uncomment agent_host and agent_port)
    endpoint: http://hostname:14268/api/traces
    # username:
    # password:
    # agent_host: hostname
    # export trace data by jaeger.thrift in compact mode
    # agent_port: 6831
  otel:
    endpoint: hostname:4318
    url_path: /v1/traces
    compression: false
    insecure: true
    # timeout is in seconds
    timeout: 10

# cache layer configurations
# if this feature enabled, harbor will cache the resource
# `project/project_metadata/repository/artifact/manifest` in the redis
# which help to improve the performance of high concurrent pulling manifest.
cache:
  # default is not enabled.
  enabled: true
  # default keep cache for one day.
  expireHours: 24

trivy:
  # enabled the flag to enable Trivy scanner
  enabled: false

database:
  type: internal
  # Fix issue: https://github.com/goharbor/harbor-helm/issues/1811
  internal:
    extrInitContainers:
      - name: db-permission-fix
        securityContext:
          runAsUser: 0  # Run as root user
        image: busybox:1.28
        command: [ 'sh', '-c', 'mkdir -p /var/lib/postgresql/data/; chown -R 999:999 /var/lib/postgresql/data/; chmod -R 700 /var/lib/postgresql/data/' ]
        volumeMounts:
          - name: database-data
            mountPath: /var/lib/postgresql/data

redis:
  type: internal