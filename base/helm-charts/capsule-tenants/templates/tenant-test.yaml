{{- range .Values.teams }}
apiVersion: capsule.clastix.io/v1beta2
kind: Tenant
metadata:
  name: team-{{- .name }}
  labels:
    team: team-{{- .name }}
spec:
  owners:
  - name: hangx
    kind: User
  namespaceOptions:                    
    quota: 100
  ingressOptions:
    hostnameCollisionScope: Cluster
    allowWildcardHostnames: false
  resourceQuotas:
    scope: Tenant                 # tenant level quota (each node -> 3860m cpu=4 cores, 16G memory)
    items:
    - hard:
        limits.cpu: "64"
        limits.memory: "128Gi"
        requests.cpu: "20"
        requests.memory: "70Gi"
        requests.storage: "100Gi"
        ####### left commented to be enabled in case we wanted to be more spesific for some storage classes. 
        # azurefile.storageclass.storage.k8s.io/requests.storage: "100Gi"
        # azurefile-csi.storageclass.storage.k8s.io/requests.storage: "100Gi"
        # azurefile-csi-premium.storageclass.storage.k8s.io/requests.storage: "100Gi"
        # azurefile-premium.storageclass.storage.k8s.io/requests.storage: "100Gi"
        # managed.storageclass.storage.k8s.io/requests.storage: "100Gi"
        # managed-blobfuse-premium-lrs.storageclass.storage.k8s.io/requests.storage: "100Gi"
        # managed-csi.storageclass.storage.k8s.io/requests.storage: "100Gi"
        # managed-csi-premium.storageclass.storage.k8s.io/requests.storage: "100Gi"
        # managed-csi-premium-retain.storageclass.storage.k8s.io/requests.storage: "100Gi"
        # managed-csi-premium-zrs.storageclass.storage.k8s.io/requests.storage: "100Gi"
        # managed-csi-standard-zrs.storageclass.storage.k8s.io/requests.storage: "100Gi"
        # managed-premium.storageclass.storage.k8s.io/requests.storage: "100Gi"
        count/persistentvolumeclaims: 30
        count/services: 100
        count/secrets: 300 
        count/configmaps: 200
        count/ingresses.networking.k8s.io: 70
        count/alertmanagerconfigs.monitoring.coreos.com: 30
        count/serviceaccounts: 100
        count/networkpolicies.networking.k8s.io: 30
        count/issuers.cert-manager.io: 10
        count/certificates.cert-manager.io: 70
        count/daemonsets.apps: 0                     # none of the teams should be able to deploy daemonsets
        count/deployments.apps: 70
        count/replicasets.apps: 700                  # considering we keep 10 history for all deplos, daemonsets and statefulsets
        count/statefulsets.apps: 30
        count/jobs.batch: 200
        count/cronjobs.batch: 50
        count/pod: 210
  limitRanges:                    # pod and container level (nodes spec -> 3860m cpu=4 cores, 16G memory)
    items:
    - limits:
      - type: Container           # container-level
        defaultRequest:           # default request
          cpu: "100m"
          memory: "100Mi"
        default:                  # default limits
          cpu: "100m"
          memory: "100Mi"
        min:                      # min (request)
          cpu: "10m"
          memory: "20Mi"
        max:                      # max (limit)
          cpu: "4"
          memory: "15Gi"
    - limits:                     # pod-level
      - type: Pod
        min:                      # min (request) - sum of all containers
          cpu: "10m"
          memory: "20Mi"
        max:                      # max (limit) - sum of all containers
          cpu: "6"
          memory: "15Gi"
    - limits:                     # pod-level
      - type: PersistentVolumeClaim
        min:
          storage: "50Mi"
        max:
          storage: "256Gi"
  networkPolicies:                # temporary permit all in/out traffics (should be modified or removed later when users added their own netPol)                      
    items:
    - policyTypes:
      - Ingress
      - Egress
      egress:                               
      - {}
      ingress:
      - {}
      podSelector: {}
  preventDeletion: true
  additionalRoleBindings:                        # to access required CRDs
  - clusterRoleName: 'update-crds'
    subjects:
    - apiGroup: rbac.authorization.k8s.io
      kind: User
      name: hangx
      namespace: tenant-system
---
{{- end }}