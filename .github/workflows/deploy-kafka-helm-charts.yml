name: Deploy Kafka Helm Charts (Windows)
# Migrated from Linux to Windows

on:
  workflow_call:
  workflow_dispatch:

defaults:
  run:
    shell: pwsh # Changed from bash to PowerShell for Windows

env:
  # Define kubeconfig file path and name - Windows style path
  KUBECONFIG: '${{ github.workspace }}\.kube\kubeconfig'

  # Define harbor URL
  harborURL: 'harbor.hanxux.local'
  harborProjectName: 'platform-tools-local'

  # Define helm chart versions
  strimziVersion: '0.45.0'
  kafkaUiVersion: '0.7.6'
  apicurioVersion: '2.6.6.Final'

jobs:
  helm-upgrade:
    runs-on: windows-local # Changed from windows-latest to windows-local

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate kubeconfig from repository secret
        run: |
          # Linux command: mkdir -p '${{ github.workspace }}/.kube' && echo '${{ secrets.HP_LOCAL_KUBECONFIG}}' | base64 -d > $KUBECONFIG && chmod 600 $KUBECONFIG
          New-Item -ItemType Directory -Path "${{ github.workspace }}\.kube" -Force
          $base64String = "${{ secrets.HP_LOCAL_KUBECONFIG}}"
          $bytes = [System.Convert]::FromBase64String($base64String)
          $decodedString = [System.Text.Encoding]::UTF8.GetString($bytes)
          $decodedString | Out-File -FilePath $env:KUBECONFIG -Encoding UTF8

      - name: Login Harbor
        run: |
          # Linux command: helm registry login '${{ env.harborURL }}' --username ${{ secrets.HARBOR_USERNAME }} --password ${{ secrets.HARBOR_PASSWORD }} --insecure
          helm registry login '${{ env.harborURL }}' --username ${{ secrets.HARBOR_USERNAME }} --password ${{ secrets.HARBOR_PASSWORD }} --insecure

      ###===========helm Upgrade External Helm Charts===============###
      - name: Upgrade strimzi-kafka-operator
        run: |
          # Linux command: export helmChartVersion=${{env.strimziVersion}}; export helmRepoName='strimzi'; export helmChartName='strimzi-kafka-operator'
          $env:helmChartVersion = '${{env.strimziVersion}}'
          $env:helmRepoName = 'strimzi'
          $env:helmChartName = 'strimzi-kafka-operator'

          # Linux command: helm pull oci://${{ env.harborURL }}/${{ env.harborProjectName }}/$helmRepoName/$helmChartName --version $helmChartVersion --insecure-skip-tls-verify
          helm pull oci://${{ env.harborURL }}/${{ env.harborProjectName }}/$env:helmRepoName/$env:helmChartName --version $env:helmChartVersion --insecure-skip-tls-verify

          # Linux command: echo "Extract CRDs"
          Write-Host "Extract CRDs"
          # Linux command: tar xvf $helmChartName-$helmChartVersion.tgz strimzi-kafka-operator/crds/
          tar xvf "$env:helmChartName-$env:helmChartVersion.tgz" strimzi-kafka-operator/crds/

          # echo "Diff CRDs"
          # kubectl diff -f strimzi-kafka-operator/crds/ -R --kubeconfig $KUBECONFIG

          # Linux command: echo "Install CRDs"
          Write-Host "Install CRDs"
          # Linux command: kubectl apply --server-side -f strimzi-kafka-operator/crds/ -R --kubeconfig $KUBECONFIG
          kubectl apply --server-side -f strimzi-kafka-operator/crds/ -R --kubeconfig $env:KUBECONFIG

          helm upgrade -i strimzi-kafka-operator -n kafka oci://${{ env.harborURL }}/${{ env.harborProjectName }}/$env:helmRepoName/$env:helmChartName -f ./kafka/external/strimzi-kafka-operator/values.yaml --version $env:helmChartVersion --history-max 5 --insecure-skip-tls-verify --kubeconfig $env:KUBECONFIG

      - name: Upgrade kafka-ui
        run: |
          # Linux command: export helmChartVersion=${{env.kafkaUiVersion}}; export helmRepoName='kafka-ui'; export helmChartName='kafka-ui'
          $env:helmChartVersion = '${{env.kafkaUiVersion}}'
          $env:helmRepoName = 'kafka-ui'
          $env:helmChartName = 'kafka-ui'

          helm upgrade -i kafka-ui -n kafka oci://${{ env.harborURL }}/${{ env.harborProjectName }}/$env:helmRepoName/$env:helmChartName --history-max 5 -f ./kafka/external/kafka-ui/values.yaml --version $env:helmChartVersion --insecure-skip-tls-verify --kubeconfig $env:KUBECONFIG

      ###===========helm Upgrade Internal Helm Charts===============###
      - name: Upgrade kafka-config
        run: |
          # Linux command: export chartDir='./kafka/helm-charts/kafka-config'
          $env:chartDir = './kafka/helm-charts/kafka-config'

          helm upgrade -i kafka-config -n kafka $env:chartDir --history-max 5 --values $env:chartDir/values.yaml --kubeconfig $env:KUBECONFIG

      # - name: Upgrade apicurio
      #   run: |
      #     # Linux command: export chartDir='./kafka/helm-charts/apicurio'
      #     $env:chartDir = './kafka/helm-charts/apicurio'

      #     helm upgrade -i apicurio -n apicurio $env:chartDir --history-max 5 --values $env:chartDir/values.yaml --kubeconfig $env:KUBECONFIG

      - name: Upgrade kafka-ui-config
        run: |
          # Linux command: export chartDir='./kafka/helm-charts/kafka-ui-config'
          $env:chartDir = './kafka/helm-charts/kafka-ui-config'

          helm upgrade -i kafka-ui-config -n kafka $env:chartDir --history-max 5 --values $env:chartDir/values.yaml --kubeconfig $env:KUBECONFIG
