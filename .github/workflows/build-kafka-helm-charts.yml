name: Build Kafka Helm Charts (Windows)
# Migrated from Linux to Windows

on:
  workflow_call:
  workflow_dispatch:
  pull_request:
    types:
    - opened
    paths:
    - 'kafka/**'
    - '.github/workflows/build-kafka-helm-charts.yml'
    - '.github/workflows/deploy-kafka-helm-charts.yml'
    - '.github/workflows/workflow-kafka.yml'

defaults:
  run:
    shell: pwsh # Changed from bash to PowerShell for Windows

env:
  # Define kubeconfig file path and name - Windows style path
  KUBECONFIG: '${{ github.workspace }}\.kube\kubeconfig'

  # Define harbor URL
  harborURL: 'harbor.hanxux.local'
  harborProjectName: 'platform-tools-local'

  # Define helm chart versions
  strimziVersion: '0.45.0'
  kafkaUiVersion: '0.7.6'
  apicurioVersion: '2.6.6.Final'

jobs:
  helm-lint-and-diff:
    runs-on: windows-local # Changed from windows-latest to windows-local

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate kubeconfig from repository secret
        run: |
          # Linux command: mkdir -p '${{ github.workspace }}/.kube' && echo '${{ secrets.HP_LOCAL_KUBECONFIG}}' | base64 -d > $KUBECONFIG && chmod 600 $KUBECONFIG
          New-Item -ItemType Directory -Path '${{ github.workspace }}\.kube' -Force
          [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String('${{ secrets.HP_LOCAL_KUBECONFIG}}')) | Out-File -FilePath $env:KUBECONFIG -Encoding UTF8

      - name: Login Harbor
        run: |
          # Linux command: helm registry login '${{ env.harborURL }}' --username ${{ secrets.HARBOR_USERNAME }} --password ${{ secrets.HARBOR_PASSWORD }} --insecure
          helm registry login '${{ env.harborURL }}' --username ${{ secrets.HARBOR_USERNAME }} --password ${{ secrets.HARBOR_PASSWORD }} --insecure

      ###===========helm lint============###
      - name: Helm Lint Apicurio
        run: |
          # Linux command: helm lint ./kafka/helm-charts/apicurio --values ./kafka/helm-charts/apicurio/values.yaml
          helm lint ./kafka/helm-charts/apicurio --values ./kafka/helm-charts/apicurio/values.yaml

      - name: Helm Lint Kafka Config
        run: |
          # Linux command: helm lint ./kafka/helm-charts/kafka-config --values ./kafka/helm-charts/kafka-config/values.yaml
          helm lint ./kafka/helm-charts/kafka-config --values ./kafka/helm-charts/kafka-config/values.yaml

      - name: Helm Lint Kafka UI Config
        run: |
          # Linux command: helm lint ./kafka/helm-charts/kafka-ui-config --values ./kafka/helm-charts/kafka-ui-config/values.yaml
          helm lint ./kafka/helm-charts/kafka-ui-config --values ./kafka/helm-charts/kafka-ui-config/values.yaml

      ###===========helm diff===============###
      - name: Diff Strimzi Kafka Operator
        run: |
          # Linux command: export helmChartVersion=${{env.strimziVersion}}; export helmRepoName='strimzi'; export helmChartName='strimzi-kafka-operator'
          $env:helmChartVersion = '${{env.strimziVersion}}'
          $env:helmRepoName = 'strimzi'
          $env:helmChartName = 'strimzi-kafka-operator'

          helm diff upgrade strimzi-kafka-operator -n strimzi-system oci://${{ env.harborURL }}/${{ env.harborProjectName }}/$env:helmRepoName/$env:helmChartName --version $env:helmChartVersion -f ./kafka/external/strimzi-kafka-operator/values.yaml --insecure-skip-tls-verify --allow-unreleased --kubeconfig $env:KUBECONFIG

      - name: Diff Kafka UI
        run: |
          # Linux command: export helmChartVersion=${{env.kafkaUiVersion}}; export helmRepoName='kafka-ui'; export helmChartName='kafka-ui'
          $env:helmChartVersion = '${{env.kafkaUiVersion}}'
          $env:helmRepoName = 'kafka-ui'
          $env:helmChartName = 'kafka-ui'

          helm diff upgrade kafka-ui -n kafka oci://${{ env.harborURL }}/${{ env.harborProjectName }}/$env:helmRepoName/$env:helmChartName --version $env:helmChartVersion -f ./kafka/external/kafka-ui/values.yaml --insecure-skip-tls-verify --allow-unreleased --kubeconfig $env:KUBECONFIG
