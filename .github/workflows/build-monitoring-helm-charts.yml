name: Build Monitoring Helm Charts (Windows)
# Migrated from Linux to Windows

on:
  workflow_call:
  workflow_dispatch:
  pull_request:
    types:
    - opened
    paths:
    - 'monitoring/**'
    - '.github/workflows/build-monitoring-helm-charts.yml'
    - '.github/workflows/deploy-monitoring-helm-charts.yml'
    - '.github/workflows/workflow-monitoring.yml'

defaults:
  run:
    shell: pwsh # Changed from bash to PowerShell for Windows

env:
  # Define kubeconfig file path and name - Windows style path
  KUBECONFIG: '${{ github.workspace }}\.kube\kubeconfig'

  # Define harbor URL
  harborURL: 'harbor.hanxux.local'
  harborProjectName: 'platform-tools-local'

  # Define helm chart versions
  # The syntax of the version is keeping the same as the github release file name
  lokiVersion: '6.31.0'
  promtailVersion: '6.17.0'
  kubePrometheusStackVersion: '75.10.0'
  tempoVersion: '1.23.2'
  grafanaAgentVersion: '0.42.0'
  jaegerVersion: '3.4.1'

jobs:
  helm-lint-and-diff:
    runs-on: windows-local # Changed from windows-latest to windows-local

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate kubeconfig from repository secret
        run: |
          New-Item -ItemType Directory -Path "${{ github.workspace }}\.kube" -Force
          $base64String = "${{ secrets.HP_LOCAL_KUBECONFIG}}"
          $bytes = [System.Convert]::FromBase64String($base64String)
          $decodedString = [System.Text.Encoding]::UTF8.GetString($bytes)
          $decodedString | Out-File -FilePath $env:KUBECONFIG -Encoding UTF8

      - name: Login Harbor
        run: |
          helm registry login '${{ env.harborURL }}' --username ${{ secrets.HARBOR_USERNAME }} --password ${{ secrets.HARBOR_PASSWORD }} --insecure

      ###===========helm lint============###
      - name: Helm Lint and template Grafana Dashboards
        run: |
          helm lint ./monitoring/helm-charts/grafana-dashboards --values ./monitoring/helm-charts/grafana-dashboards/values.yaml

          # helm template ./monitoring/helm-charts/grafana-dashboards \
          # --values ./monitoring/helm-charts/grafana-dashboards/values.yaml \
          # --dry-run \
          # --debug

      - name: Helm Lint prometheus-rules
        run: |
          helm lint ./monitoring/helm-charts/prometheus-rules --values ./monitoring/helm-charts/prometheus-rules/values.yaml

          # helm template ./monitoring/helm-charts/prometheus-rules \
          # --values ./monitoring/helm-charts/prometheus-rules/values.yaml \
          # --dry-run \
          # --debug

    ## Not installed yet. Uncomment it after install it.
    # - name: Helm Lint and template Grafana Datasources
    #   run: |
    #     helm lint ./monitoring/helm-charts/grafana-datasources \
    #     --values ./monitoring/helm-charts/grafana-datasources/values.yaml

    #     helm template ./monitoring/helm-charts/grafana-datasources \
    #     --values ./monitoring/helm-charts/grafana-datasources/values.yaml \
    #     --dry-run \
    #     --debug

      ###===========helm diff===============###
      - name: Diff grafana-agent
        run: |
          $env:helmChartVersion = '${{env.grafanaAgentVersion}}'
          $env:helmRepoName = 'grafana'
          $env:helmChartName = 'grafana-agent'

          helm diff upgrade grafana-agent -n monitoring oci://${{ env.harborURL }}/${{ env.harborProjectName }}/$env:helmRepoName/$env:helmChartName -f ./monitoring/external/grafana-agent/values.yaml --version $env:helmChartVersion --insecure-skip-tls-verify --allow-unreleased --kubeconfig $env:KUBECONFIG

      - name: Diff kube-prometheus-stack
        run: |
          $env:helmChartVersion = '${{env.kubePrometheusStackVersion}}'
          $env:helmRepoName = 'prometheus-community'
          $env:helmChartName = 'kube-prometheus-stack'

          helm diff upgrade kube-prometheus-stack -n monitoring oci://${{ env.harborURL }}/${{ env.harborProjectName }}/$env:helmRepoName/$env:helmChartName -f ./monitoring/external/kube-prometheus-stack/values.yaml --version $env:helmChartVersion --set grafana.adminPassword='${{ secrets.GRAFANA_ADMIN_PASSWORD}}' --insecure-skip-tls-verify --allow-unreleased --kubeconfig $env:KUBECONFIG

      # - name: Diff prometheus-rules helm chart
      #   run: |
      #     helm diff upgrade prometheus-rules -n monitoring \
      #       ./monitoring/helm-charts/prometheus-rules \
      #       -f ./monitoring/helm-charts/prometheus-rules/values.yaml \
      #       --allow-unreleased \
      #       --kubeconfig $KUBECONFIG

      # - name: Diff grafana-dashboards helm chart
      #   run: |
      #     helm diff upgrade grafana-dashboards -n monitoring \
      #       ./monitoring/helm-charts/grafana-dashboards \
      #       -f ./monitoring/helm-charts/grafana-dashboards/values.yaml \
      #       --allow-unreleased \
      #       --kubeconfig $KUBECONFIG

      # - name: Diff grafana-datasources helm chart
      #   run: |
      #     helm diff upgrade commoninfra-grafana-external-datasource -n monitoring \
      #       ./monitoring/helm-charts/grafana-datasources \
      #       -f ./monitoring/external/grafana-datasources/values.yaml \
      #       --allow-unreleased \
      #       --kubeconfig $KUBECONFIG

      - name: Diff loki
        run: |
          $env:helmChartVersion = '${{env.lokiVersion}}'
          $env:helmRepoName = 'grafana'
          $env:helmChartName = 'loki'

          helm diff upgrade loki -n monitoring oci://${{ env.harborURL }}/${{ env.harborProjectName }}/$env:helmRepoName/$env:helmChartName -f ./monitoring/external/loki/values.yaml --version $env:helmChartVersion --insecure-skip-tls-verify --allow-unreleased --kubeconfig $env:KUBECONFIG

      - name: Diff promtail
        run: |
          $env:helmChartVersion = '${{env.promtailVersion}}'
          $env:helmRepoName = 'grafana'
          $env:helmChartName = 'promtail'

          helm diff upgrade promtail -n monitoring oci://${{ env.harborURL }}/${{ env.harborProjectName }}/$env:helmRepoName/$env:helmChartName -f ./monitoring/external/promtail/values.yaml --version $env:helmChartVersion --insecure-skip-tls-verify --allow-unreleased --kubeconfig $env:KUBECONFIG

      - name: Diff tempo
        run: |
          $env:helmChartVersion = '${{env.tempoVersion}}'
          $env:helmRepoName = 'grafana'
          $env:helmChartName = 'tempo'

          helm diff upgrade tempo -n monitoring oci://${{ env.harborURL }}/${{ env.harborProjectName }}/$env:helmRepoName/$env:helmChartName -f ./monitoring/external/tempo/values.yaml --version $env:helmChartVersion --insecure-skip-tls-verify --allow-unreleased --kubeconfig $env:KUBECONFIG

      - name: Diff jaeger
        run: |
          $env:helmChartVersion = '${{env.jaegerVersion}}'
          $env:helmRepoName = 'jaegertracing'
          $env:helmChartName = 'jaeger'

          helm diff upgrade jaeger -n monitoring oci://${{ env.harborURL }}/${{ env.harborProjectName }}/$env:helmRepoName/$env:helmChartName -f ./monitoring/external/jaeger/values.yaml --version $env:helmChartVersion --insecure-skip-tls-verify --allow-unreleased --kubeconfig $env:KUBECONFIG
